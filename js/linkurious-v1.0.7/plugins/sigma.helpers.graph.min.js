(function(a){"use strict";if("undefined"==typeof sigma)throw"sigma is not declared";var b=Object.create(null);sigma.classes.graph.attach("addNode","sigma.helpers.graph.addNode",function(a){a.fixed&&(b[a.id]=this.nodesIndex[a.id])}),sigma.classes.graph.attachBefore("dropNode","sigma.helpers.graph.dropNode",function(a){delete b[a]}),sigma.classes.graph.attachBefore("clear","sigma.helpers.graph.clear",function(){var a;for(a in b)"hasOwnProperty"in b&&!b.hasOwnProperty(a)||delete b[a];b=Object.create(null)}),sigma.classes.graph.hasMethod("fixNode")||sigma.classes.graph.addMethod("fixNode",function(a){return this.nodesIndex[a]&&(this.nodesIndex[a].fixed=!0,b[a]=this.nodesIndex[a]),this}),sigma.classes.graph.hasMethod("unfixNode")||sigma.classes.graph.addMethod("unfixNode",function(a){return this.nodesIndex[a]&&(delete this.nodesIndex[a].fixed,delete b[a]),this}),sigma.classes.graph.hasMethod("getFixedNodes")||sigma.classes.graph.addMethod("getFixedNodes",function(){var a,c=[];for(a in b)c.push(this.nodesIndex[a]);return c}),sigma.classes.graph.hasMethod("dropNodes")||sigma.classes.graph.addMethod("dropNodes",function(a){if(1!==arguments.length||"string"!=typeof a&&"number"!=typeof a){if(1!==arguments.length||"[object Array]"!==Object.prototype.toString.call(a))throw"dropNodes: Wrong arguments.";var b,c;for(b=0,c=a.length;c>b;b++){if("string"!=typeof a[b]&&"number"!=typeof a[b])throw"dropNodes: Wrong arguments.";this.dropNode(a[b])}}else this.dropNode(a);return this}),sigma.classes.graph.hasMethod("dropEdges")||sigma.classes.graph.addMethod("dropEdges",function(a){if(1!==arguments.length||"string"!=typeof a&&"number"!=typeof a){if(1!==arguments.length||"[object Array]"!==Object.prototype.toString.call(a))throw"dropEdges: Wrong arguments.";var b,c;for(b=0,c=a.length;c>b;b++){if("string"!=typeof a[b]&&"number"!=typeof a[b])throw"dropEdges: Wrong arguments.";this.dropEdge(a[b])}}else this.dropEdge(a);return this}),sigma.classes.graph.hasMethod("adjacentNodes")||sigma.classes.graph.addMethod("adjacentNodes",function(a){if("string"!=typeof a&&"number"!=typeof a)throw"adjacentNodes: the node id must be a string or a number.";var b,c=[];for(b in this.allNeighborsIndex[a])c.push(this.nodesIndex[b]);return c}),sigma.classes.graph.hasMethod("adjacentEdges")||sigma.classes.graph.addMethod("adjacentEdges",function(a){if("string"!=typeof a&&"number"!=typeof a)throw"adjacentEdges: the node id must be a string or a number.";var b,c,d=this.allNeighborsIndex[a],e=[];for(c in d)for(b in d[c])e.push(d[c][b]);return e})}).call(this);
//# sourceMappingURL=sigma.helpers.graph.min.js.map